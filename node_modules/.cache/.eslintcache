[{"/Users/jatingoyal/Desktop/coding/react/first-blog-project/src/index.js":"1","/Users/jatingoyal/Desktop/coding/react/first-blog-project/src/App.js":"2","/Users/jatingoyal/Desktop/coding/react/first-blog-project/src/firebase-config.js":"3","/Users/jatingoyal/Desktop/coding/react/first-blog-project/src/pages/CreatePost.js":"4","/Users/jatingoyal/Desktop/coding/react/first-blog-project/src/pages/Home.js":"5","/Users/jatingoyal/Desktop/coding/react/first-blog-project/src/pages/Login.js":"6","/Users/jatingoyal/Desktop/coding/react/first-blog-project/src/pages/UpdatePost.js":"7"},{"size":396,"mtime":1656020205917,"results":"8","hashOfConfig":"9"},{"size":1942,"mtime":1656021569789,"results":"10","hashOfConfig":"9"},{"size":696,"mtime":1656020205917,"results":"11","hashOfConfig":"9"},{"size":1448,"mtime":1656021613118,"results":"12","hashOfConfig":"9"},{"size":2174,"mtime":1656021676618,"results":"13","hashOfConfig":"9"},{"size":684,"mtime":1656020205917,"results":"14","hashOfConfig":"9"},{"size":1448,"mtime":1656021640823,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1669l8q",{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"23"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"23"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"23"},"/Users/jatingoyal/Desktop/coding/react/first-blog-project/src/index.js",[],[],"/Users/jatingoyal/Desktop/coding/react/first-blog-project/src/App.js",["42"],[],"import \"./App.css\";\nimport React, { useState } from \"react\";\nimport { BrowserRouter as Router, Routes, Route, Link } from \"react-router-dom\";\nimport Home from \"./pages/Home\";\nimport Login from \"./pages/Login\";\nimport CreatePost from \"./pages/CreatePost\";\nimport { signOut } from \"firebase/auth\";\nimport { auth } from \"./firebase-config\";\nimport { Navigate } from \"react-router-dom\";\nimport { Update } from \"@mui/icons-material\";\nimport UpdatePost from \"./pages/UpdatePost\";\n\nfunction App() {\n  const [isAuth, setisAuth] = useState(localStorage.getItem(\"isAuth\"));\n\n  const signUserOut = () => {\n    signOut(auth).then(() => {\n      localStorage.clear();\n      setisAuth(false);\n      window.location.pathname = \"/login\";\n    });\n  };\n\n  function ProtectedRoute({ children }) {\n    if (!isAuth) {\n      return <Navigate to=\"/\" />;\n    }\n    return children;\n  }\n\n  return (\n    <Router>\n      <nav>\n        <Link className=\"btn\" to=\"/\">\n          Home\n        </Link>\n\n        {!isAuth ? (\n          <Link className=\"btn\" to=\"/login\">\n            Log In\n          </Link>\n        ) : (\n          <>\n            <Link className=\"btn\" to=\"/createpost\">\n              Create Post\n            </Link>\n            <button className=\"logOut btn\" onClick={signUserOut}>\n              Log Out\n            </button>\n          </>\n        )}\n      </nav>\n      <div className=\"nav2\"></div>\n      <Routes>\n        <Route path=\"/\" element={<Home isAuth={isAuth} />} />\n        <Route\n          path=\"/createpost\"\n          element={\n            <ProtectedRoute>\n              <CreatePost />\n            </ProtectedRoute>\n          }\n        />\n        <Route\n          path=\"/updatepost/:id\"\n          element={\n            <ProtectedRoute>\n              <UpdatePost />\n            </ProtectedRoute>\n          }\n        />\n        <Route path=\"/login\" element={<Login setisAuth={setisAuth} />} />\n      </Routes>\n    </Router>\n  );\n}\n\nexport default App;\n",[],"/Users/jatingoyal/Desktop/coding/react/first-blog-project/src/firebase-config.js",[],[],"/Users/jatingoyal/Desktop/coding/react/first-blog-project/src/pages/CreatePost.js",["43","44"],[],"import React, { useState } from \"react\";\nimport { addDoc, collection, serverTimestamp } from \"firebase/firestore\";\nimport { db, auth } from \"../firebase-config\";\nimport { useNavigate } from \"react-router-dom\";\n\nfunction CreatePost() {\n  const [title, setTitle] = useState(\"\");\n  const [postText, setPostText] = useState(\"\");\n  const [sharedImage, setSharedImage] = useState(\"\");\n\n  let navigate = useNavigate();\n\n  const postsCollectionRef = collection(db, \"posts\");\n\n  const createPost = async () => {\n    let time = serverTimestamp();\n\n    await addDoc(postsCollectionRef, {\n      time,\n      title,\n      postText,\n      author: { name: auth.currentUser.displayName, id: auth.currentUser.uid },\n    });\n    navigate(\"/\");\n  };\n\n  return (\n    <div className=\"createPostPage\">\n      <div className=\"cpContainer\">\n        <h1>Create A Post</h1>\n        <div className=\"inputGp\">\n          <label>Title:</label>\n          <input\n            placeholder=\"title...\"\n            onChange={(event) => {\n              setTitle(event.target.value);\n            }}\n          />\n        </div>\n        <div className=\"inputGp\">\n          <label>Post:</label>\n          <textarea\n            placeholder=\"post...\"\n            onChange={(event) => {\n              setPostText(event.target.value);\n            }}\n          />\n        </div>\n\n        <button onClick={createPost}>Submit Post</button>\n      </div>\n    </div>\n  );\n}\n\nexport default CreatePost;\n","/Users/jatingoyal/Desktop/coding/react/first-blog-project/src/pages/Home.js",["45","46","47"],[],"import React, { useEffect, useState } from \"react\";\nimport {\n  getDocs,\n  collection,\n  deleteDoc,\n  doc,\n  query,\n  orderBy,\n} from \"firebase/firestore\";\nimport { auth, db } from \"../firebase-config\";\nimport { IconButton } from \"@mui/material\";\nimport { Delete, Edit } from \"@mui/icons-material\";\nimport { useNavigate } from \"react-router-dom\";\n\nfunction Home({ isAuth }) {\n  const navigate = useNavigate();\n  const [postsList, setPostsList] = useState([]);\n  const postsCollectionRef = collection(db, \"posts\");\n  const q = query(postsCollectionRef, orderBy(\"time\", \"desc\"));\n\n  const getPostsList = async () => {\n    const data = await getDocs(q);\n    setPostsList(data.docs.map((doc) => ({ ...doc.data(), id: doc.id })));\n  };\n\n  useEffect(() => {\n    getPostsList();\n  }, []);\n\n  const deletePost = async (id) => {\n    const userPost = doc(db, \"posts\", id);\n    await deleteDoc(userPost);\n\n    getPostsList();\n    // window.location.reload(false);\n  };\n\n  const updatePost = async (id) => {\n    const userPost = doc(db, \"posts\", id);\n  };\n  return (\n    <div className=\"homePage\">\n      {postsList.map((post) => {\n        return (\n          <div className=\"post\">\n            <div className=\"postHeader\">\n              <div className=\"title\">\n                <h2>{post.title}</h2>\n              </div>\n              {isAuth && post.author.id === auth.currentUser?.uid && (\n                <div className=\"postOptions\">\n                  <IconButton>\n                    <Edit onClick={() => updatePost(post.id)} />\n                  </IconButton>\n                  <IconButton>\n                    <Delete onClick={() => deletePost(post.id)} />\n                  </IconButton>\n                </div>\n              )}\n\n              {/* <div className=\"deletePost\">\n                {isAuth && post.author.id === auth.currentUser?.uid && (\n                  <button onClick={() => deletePost(post.id)}>&#128465;</button>\n                )}\n              </div> */}\n            </div>\n            <div className=\"postTextContainer\">{post.postText}</div>\n            <h4>@{post.author.name}</h4>\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n\nexport default Home;\n","/Users/jatingoyal/Desktop/coding/react/first-blog-project/src/pages/Login.js",[],[],"/Users/jatingoyal/Desktop/coding/react/first-blog-project/src/pages/UpdatePost.js",["48","49"],[],"import React, { useState } from \"react\";\nimport { addDoc, collection, serverTimestamp } from \"firebase/firestore\";\nimport { db, auth } from \"../firebase-config\";\nimport { useNavigate } from \"react-router-dom\";\n\nfunction UpdatePost() {\n  const [title, setTitle] = useState(\"\");\n  const [postText, setPostText] = useState(\"\");\n  const [sharedImage, setSharedImage] = useState(\"\");\n\n  let navigate = useNavigate();\n\n  const postsCollectionRef = collection(db, \"posts\");\n\n  const createPost = async () => {\n    let time = serverTimestamp();\n\n    await addDoc(postsCollectionRef, {\n      time,\n      title,\n      postText,\n      author: { name: auth.currentUser.displayName, id: auth.currentUser.uid },\n    });\n    navigate(\"/\");\n  };\n\n  return (\n    <div className=\"createPostPage\">\n      <div className=\"cpContainer\">\n        <h1>Create A Post</h1>\n        <div className=\"inputGp\">\n          <label>Title:</label>\n          <input\n            placeholder=\"title...\"\n            onChange={(event) => {\n              setTitle(event.target.value);\n            }}\n          />\n        </div>\n        <div className=\"inputGp\">\n          <label>Post:</label>\n          <textarea\n            placeholder=\"post...\"\n            onChange={(event) => {\n              setPostText(event.target.value);\n            }}\n          />\n        </div>\n\n        <button onClick={createPost}>Update Post</button>\n      </div>\n    </div>\n  );\n}\n\nexport default UpdatePost;\n",{"ruleId":"50","severity":1,"message":"51","line":10,"column":10,"nodeType":"52","messageId":"53","endLine":10,"endColumn":16},{"ruleId":"50","severity":1,"message":"54","line":9,"column":10,"nodeType":"52","messageId":"53","endLine":9,"endColumn":21},{"ruleId":"50","severity":1,"message":"55","line":9,"column":23,"nodeType":"52","messageId":"53","endLine":9,"endColumn":37},{"ruleId":"50","severity":1,"message":"56","line":16,"column":9,"nodeType":"52","messageId":"53","endLine":16,"endColumn":17},{"ruleId":"57","severity":1,"message":"58","line":28,"column":6,"nodeType":"59","endLine":28,"endColumn":8,"suggestions":"60"},{"ruleId":"50","severity":1,"message":"61","line":39,"column":11,"nodeType":"52","messageId":"53","endLine":39,"endColumn":19},{"ruleId":"50","severity":1,"message":"54","line":9,"column":10,"nodeType":"52","messageId":"53","endLine":9,"endColumn":21},{"ruleId":"50","severity":1,"message":"55","line":9,"column":23,"nodeType":"52","messageId":"53","endLine":9,"endColumn":37},"no-unused-vars","'Update' is defined but never used.","Identifier","unusedVar","'sharedImage' is assigned a value but never used.","'setSharedImage' is assigned a value but never used.","'navigate' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getPostsList'. Either include it or remove the dependency array.","ArrayExpression",["62"],"'userPost' is assigned a value but never used.",{"desc":"63","fix":"64"},"Update the dependencies array to be: [getPostsList]",{"range":"65","text":"66"},[776,778],"[getPostsList]"]