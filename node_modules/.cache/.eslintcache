[{"/Users/jatingoyal/Desktop/coding/react/first-blog-project/src/index.js":"1","/Users/jatingoyal/Desktop/coding/react/first-blog-project/src/App.js":"2","/Users/jatingoyal/Desktop/coding/react/first-blog-project/src/firebase-config.js":"3","/Users/jatingoyal/Desktop/coding/react/first-blog-project/src/pages/CreatePost.js":"4","/Users/jatingoyal/Desktop/coding/react/first-blog-project/src/pages/Home.js":"5","/Users/jatingoyal/Desktop/coding/react/first-blog-project/src/pages/Login.js":"6"},{"size":396,"mtime":1656020205917,"results":"7","hashOfConfig":"8"},{"size":1672,"mtime":1656020205917,"results":"9","hashOfConfig":"8"},{"size":696,"mtime":1656020205917,"results":"10","hashOfConfig":"8"},{"size":1931,"mtime":1656020205917,"results":"11","hashOfConfig":"8"},{"size":2092,"mtime":1656021156297,"results":"12","hashOfConfig":"8"},{"size":684,"mtime":1656020205917,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1669l8q",{"filePath":"17","messages":"18","suppressedMessages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/jatingoyal/Desktop/coding/react/first-blog-project/src/index.js",[],[],"/Users/jatingoyal/Desktop/coding/react/first-blog-project/src/App.js",[],[],"/Users/jatingoyal/Desktop/coding/react/first-blog-project/src/firebase-config.js",[],[],"/Users/jatingoyal/Desktop/coding/react/first-blog-project/src/pages/CreatePost.js",["33","34"],[],"/Users/jatingoyal/Desktop/coding/react/first-blog-project/src/pages/Home.js",["35","36"],[],"import React, { useEffect, useState } from \"react\";\nimport {\n  getDocs,\n  collection,\n  deleteDoc,\n  doc,\n  query,\n  orderBy,\n} from \"firebase/firestore\";\nimport { auth, db } from \"../firebase-config\";\nimport { IconButton } from \"@mui/material\";\nimport { Delete, Edit } from \"@mui/icons-material\";\n\nfunction Home({ isAuth }) {\n  const [postsList, setPostsList] = useState([]);\n  const postsCollectionRef = collection(db, \"posts\");\n  const q = query(postsCollectionRef, orderBy(\"time\", \"desc\"));\n\n  const getPostsList = async () => {\n    const data = await getDocs(q);\n    setPostsList(data.docs.map((doc) => ({ ...doc.data(), id: doc.id })));\n  };\n\n  useEffect(() => {\n    getPostsList();\n  }, []);\n\n  const deletePost = async (id) => {\n    const userPost = doc(db, \"posts\", id);\n    await deleteDoc(userPost);\n\n    getPostsList();\n    // window.location.reload(false);\n  };\n\n  const updatePost = async (id) => {\n    const userPost = doc(db, \"posts\", id);\n  };\n  return (\n    <div className=\"homePage\">\n      {postsList.map((post) => {\n        return (\n          <div className=\"post\">\n            <div className=\"postHeader\">\n              <div className=\"title\">\n                <h2>{post.title}</h2>\n              </div>\n              {isAuth && post.author.id === auth.currentUser?.uid && (\n                <div className=\"postOptions\">\n                  <IconButton>\n                    <Edit onClick={() => updatePost(post.id)} />\n                  </IconButton>\n                  <IconButton>\n                    <Delete onClick={() => deletePost(post.id)} />\n                  </IconButton>\n                </div>\n              )}\n\n              {/* <div className=\"deletePost\">\n                {isAuth && post.author.id === auth.currentUser?.uid && (\n                  <button onClick={() => deletePost(post.id)}>&#128465;</button>\n                )}\n              </div> */}\n            </div>\n            <div className=\"postTextContainer\">{post.postText}</div>\n            <h4>@{post.author.name}</h4>\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n\nexport default Home;\n","/Users/jatingoyal/Desktop/coding/react/first-blog-project/src/pages/Login.js",[],[],{"ruleId":"37","severity":1,"message":"38","line":9,"column":10,"nodeType":"39","messageId":"40","endLine":9,"endColumn":21},{"ruleId":"37","severity":1,"message":"41","line":15,"column":9,"nodeType":"39","messageId":"40","endLine":15,"endColumn":20},{"ruleId":"42","severity":1,"message":"43","line":26,"column":6,"nodeType":"44","endLine":26,"endColumn":8,"suggestions":"45"},{"ruleId":"37","severity":1,"message":"46","line":37,"column":11,"nodeType":"39","messageId":"40","endLine":37,"endColumn":19},"no-unused-vars","'sharedImage' is assigned a value but never used.","Identifier","unusedVar","'handleImage' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getPostsList'. Either include it or remove the dependency array.","ArrayExpression",["47"],"'userPost' is assigned a value but never used.",{"desc":"48","fix":"49"},"Update the dependencies array to be: [getPostsList]",{"range":"50","text":"51"},[694,696],"[getPostsList]"]