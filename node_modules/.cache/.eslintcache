[{"/Users/jatingoyal/Desktop/coding/react/first-blog-project/src/index.js":"1","/Users/jatingoyal/Desktop/coding/react/first-blog-project/src/App.js":"2","/Users/jatingoyal/Desktop/coding/react/first-blog-project/src/firebase-config.js":"3","/Users/jatingoyal/Desktop/coding/react/first-blog-project/src/pages/CreatePost.js":"4","/Users/jatingoyal/Desktop/coding/react/first-blog-project/src/pages/Home.js":"5","/Users/jatingoyal/Desktop/coding/react/first-blog-project/src/pages/Login.js":"6"},{"size":396,"mtime":1654864792610,"results":"7","hashOfConfig":"8"},{"size":1672,"mtime":1654885956178,"results":"9","hashOfConfig":"8"},{"size":696,"mtime":1654864792609,"results":"10","hashOfConfig":"8"},{"size":1931,"mtime":1654889371561,"results":"11","hashOfConfig":"8"},{"size":1486,"mtime":1654891598559,"results":"12","hashOfConfig":"8"},{"size":684,"mtime":1654864792610,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1669l8q",{"filePath":"17","messages":"18","suppressedMessages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/jatingoyal/Desktop/coding/react/first-blog-project/src/index.js",[],[],"/Users/jatingoyal/Desktop/coding/react/first-blog-project/src/App.js",[],[],[],"/Users/jatingoyal/Desktop/coding/react/first-blog-project/src/firebase-config.js",[],[],"/Users/jatingoyal/Desktop/coding/react/first-blog-project/src/pages/CreatePost.js",["35","36"],[],"import React, { useState } from \"react\";\nimport { addDoc, collection, serverTimestamp } from \"firebase/firestore\";\nimport { db, auth } from \"../firebase-config\";\nimport { useNavigate } from \"react-router-dom\";\n\nfunction CreatePost() {\n  const [title, setTitle] = useState(\"\");\n  const [postText, setPostText] = useState(\"\");\n  const [sharedImage, setSharedImage] = useState(\"\");\n\n  let navigate = useNavigate();\n\n  const postsCollectionRef = collection(db, \"posts\");\n\n  const handleImage = (e) => {\n    const image = e.target.files[0];\n\n    if (image === \"\" || image === undefined) {\n      alert(`not an image , this file is ${typeof image}`);\n      return;\n    }\n\n    setSharedImage(image);\n  };\n\n  const createPost = async () => {\n    let time = serverTimestamp();\n\n    await addDoc(postsCollectionRef, {\n      time,\n      title,\n      postText,\n      author: { name: auth.currentUser.displayName, id: auth.currentUser.uid },\n    });\n    navigate(\"/\");\n  };\n\n  return (\n    <div className=\"createPostPage\">\n      <div className=\"cpContainer\">\n        <h1>Create A Post</h1>\n        <div className=\"inputGp\">\n          <label>Title:</label>\n          <input\n            placeholder=\"title...\"\n            onChange={(event) => {\n              setTitle(event.target.value);\n            }}\n          />\n        </div>\n        <div className=\"inputGp\">\n          <label>Post:</label>\n          <textarea\n            placeholder=\"post...\"\n            onChange={(event) => {\n              setPostText(event.target.value);\n            }}\n          />\n        </div>\n        {/* <div className=\"inputGp\">\n          <label htmlFor=\"file\">image:</label>\n          <input type=\"file\" accept=\"image/jpeg\" onChange={handleImage} />\n\n          {sharedImage && <img src={URL.createObjectURL(sharedImage)} />}\n        </div> */}\n        <button onClick={createPost}>Submit Post</button>\n      </div>\n    </div>\n  );\n}\n\nexport default CreatePost;\n","/Users/jatingoyal/Desktop/coding/react/first-blog-project/src/pages/Home.js",["37"],[],"import React, { useEffect, useState } from \"react\";\nimport {\n  getDocs,\n  collection,\n  deleteDoc,\n  doc,\n  query,\n  orderBy,\n} from \"firebase/firestore\";\nimport { auth, db } from \"../firebase-config\";\n\nfunction Home({ isAuth }) {\n  const [postsList, setPostsList] = useState([]);\n  const postsCollectionRef = collection(db, \"posts\");\n  const q = query(postsCollectionRef, orderBy(\"time\", \"desc\"));\n\n  const getPostsList = async () => {\n    const data = await getDocs(q);\n    setPostsList(data.docs.map((doc) => ({ ...doc.data(), id: doc.id })));\n  };\n\n  useEffect(() => {\n    getPostsList();\n  }, []);\n\n  const deletePost = async (id) => {\n    const userPost = doc(db, \"posts\", id);\n    await deleteDoc(userPost);\n\n    getPostsList();\n    // window.location.reload(false);\n  };\n  return (\n    <div className=\"homePage\">\n      {postsList.map((post) => {\n        return (\n          <div className=\"post\">\n            <div className=\"postHeader\">\n              <div className=\"title\">\n                <h2>{post.title}</h2>\n              </div>\n              <div className=\"deletePost\">\n                {isAuth && post.author.id === auth.currentUser?.uid && (\n                  <button onClick={() => deletePost(post.id)}>&#128465;</button>\n                )}\n              </div>\n            </div>\n            <div className=\"postTextContainer\">{post.postText}</div>\n            <h4>@{post.author.name}</h4>\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n\nexport default Home;\n","/Users/jatingoyal/Desktop/coding/react/first-blog-project/src/pages/Login.js",[],[],{"ruleId":"38","severity":1,"message":"39","line":9,"column":10,"nodeType":"40","messageId":"41","endLine":9,"endColumn":21},{"ruleId":"38","severity":1,"message":"42","line":15,"column":9,"nodeType":"40","messageId":"41","endLine":15,"endColumn":20},{"ruleId":"43","severity":1,"message":"44","line":24,"column":6,"nodeType":"45","endLine":24,"endColumn":8,"suggestions":"46"},"no-unused-vars","'sharedImage' is assigned a value but never used.","Identifier","unusedVar","'handleImage' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getPostsList'. Either include it or remove the dependency array.","ArrayExpression",["47"],{"desc":"48","fix":"49"},"Update the dependencies array to be: [getPostsList]",{"range":"50","text":"51"},[598,600],"[getPostsList]"]